# Starter pipeline


# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
variables:
  CloudInitContent: ""
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  environment: Development

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArguments: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\Devoir1.zip"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: NuGetCommand@2
  inputs:
    command: 'pack'
    packagesToPack: '**/*.csproj'
    versioningScheme: 'byPrereleaseNumber'
    majorVersion: '1'
    minorVersion: '0'
    patchVersion: '0'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
    
- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(188533e8-ed54-47d2-857a-0620ebdeb029)'
    subscriptionId: '188533e8-ed54-47d2-857a-0620ebdeb029'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'KeyVault'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: '.\KeyVault\azuredeploy.json'
    csmParametersFile: '.\KeyVault\azuredeploy.parameters.json'
    deploymentMode: 'Incremental'
    
- task: AzureKeyVault@2
  inputs:
    azureSubscription: 'Azure subscription 1(188533e8-ed54-47d2-857a-0620ebdeb029)'
    KeyVaultName: 'KeyVault-CoursCloud'
    SecretsFilter: 'AdminPass'
    RunAsPreJob: false

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $CloudContent = Get-Content -Path .\RessourceGroup\Cloud-Init.txt -Raw
      Write-Host $CloudContent
      $encodedContent = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($CloudContent))
      Write-Host $encodedContent
      Write-Host "##vso[task.setvariable variable=CloudInitContent;]$encodedContent"

- script:
    echo $(CloudInitContent)

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: 'Azure subscription 1(188533e8-ed54-47d2-857a-0620ebdeb029)'
    subscriptionId: '188533e8-ed54-47d2-857a-0620ebdeb029'
    action: 'Create Or Update Resource Group'
    resourceGroupName: 'Devoir1'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)\RessourceGroup\LinuxVirtualMachineScaleSet.json'
    csmParametersFile: '$(Build.SourcesDirectory)\RessourceGroup\LinuxVirtualMachineScaleSet.parameters.json'
    overrideParameters: '-customData $(CloudInitContent) -adminPassword $(AdminPass)'
    deploymentMode: 'Incremental'